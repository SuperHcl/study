<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.example.springbootmybatis.repository.mapper.StudentMapper">

    <sql id="s1">
        s.*
    </sql>
    <sql id="s2">
        s.id,s.name
    </sql>
    <insert id="insertOne">
        insert into student(name, age, address) value (#{name}, #{age}, #{address})
    </insert>

    <select id="findById" resultType="com.example.springbootmybatis.repository.dao.StudentDAO">
        select * from student where id = #{id}
    </select>

    <select id="findByParam" resultType="com.example.springbootmybatis.repository.dao.StudentDAO">
        select
        <choose>
            <when test="id != null">
                <include refid="s2" />
            </when>
            <otherwise>
                <include refid="s1"/>
            </otherwise>
        </choose>
        from student s
        <where>
            <if test="id != null">
                s.id = #{id}
            </if>
            <if test="(id == null) and (name != null and name != '')">
                s.name = #{name}
            </if>

            <!--<if test="address != null and address != ''">

            </if>-->
            <if test="id == 5">
                order by s.id desc
            </if>
        </where>
    </select>

    <select id="findByStudent" resultType="com.example.springbootmybatis.repository.dao.StudentDAO">
        select * from student s
        where 0 = 0
        /*这种方式会报错，因为StudnetDAO类中没有address属性，在进行属性反射取值的时候会报错*/
        <if test="address != null and address != ''">
            and s.name = #{address}
        </if>
    </select>

    <select id="findOneByStudent" resultType="com.example.springbootmybatis.repository.dao.StudentDAO"
            parameterType="com.example.springbootmybatis.repository.dao.StudentDAO">
        select * from student where id = #{id}
    </select>

    <select id="findAll" resultType="map">
        select s.*, c.name as cname
        from student s
                 left join classroom cr on s.id = cr.student_id
                 left join class c on cr.class_id = c.id
    </select>
</mapper>